<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xenei</groupId>
	<artifactId>jena-on-cassandra</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Jena-on-Cassandra</name>
	<description>Implementation of Jena graph on Cassandra</description>

	<dependencies>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-core</artifactId>
			<type>jar</type>
			<version>${jena-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-arq</artifactId>
			<type>jar</type>
			<version>${jena-version}</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.apache.cassandra</groupId> -->
		<!-- <artifactId>cassandra-all</artifactId> -->
		<!-- <version>${cassandra-version}</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>${datastax-version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.xenei</groupId>
			<artifactId>junit-contracts</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-core</artifactId>
			<version>${jena-version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerVersion>${java.version}</compilerVersion>
					<release>${java.version}</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- Java11: https://bugs.openjdk.java.net/browse/JDK-8212233 JDK-8212233 
						Fixed in 12.0.1, 11.0.3 (??) Explicitly define the source as Java8 when building 
						with java8 source code for java8 output. Not good enough when compiling for 
						Java11 output. https://issues.apache.org/jira/browse/MJAVADOC-555 -->

					<!-- Fixes for Javadoc when building for Java11. (1) Fix for: Named 
						/ unnamed modules error/warning (2) Fix for: [ERROR] error: the unnamed module 
						reads package PKG from both A and B Modules impacted: jena-geosparql jena-jdbc -->
					<detectJavaApiLink>false</detectJavaApiLink>

					<!-- Some modules have source = ${java.version} where they use Java 
						11 features but applying that here causes two kinds of problems. 1/ apache-jena-libs:pom. 
						This artifact as a dependency now causes an error attaching as a POM. 2/ 
						dependency errors on overlapping packages (which don't appear to overlap) 
						3/ Mixed modules and non-module jars (may be the same as 2) -->
					<source>8</source>
					<!-- End Java11 fixes (2021-01) -->

					<!-- To allow the build to keep going despite javadoc problems: <failOnError>false</failOnError> -->
					<!-- For producible builds https://maven.apache.org/guides/mini/guide-reproducible-builds.html 
						See FAQ -->
					<notimestamp>true</notimestamp>
					<quiet>true</quiet>
					<doclint>none</doclint>
					<version>true</version>
					<show>public</show>
					<encoding>UTF-8</encoding>
					<windowtitle>${project.name} ${project.version}</windowtitle>
					<doctitle>${project.name} ${project.version}</doctitle>
					<bottom>Licensed under the Apache License, Version 2.0</bottom>

					<!-- Settings for @apiNote, @implSpec and @implNote -->
					<tags>
						<tag>
							<name>apiNote</name>
							<placement>a</placement>
							<head>API Note:</head>
						</tag>
						<tag>
							<name>implSpec</name>
							<placement>a</placement>
							<head>Implementation Requirements:</head>
						</tag>
						<tag>
							<name>implNote</name>
							<placement>a</placement>
							<head>Implementation Note:</head>
						</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<overWriteReleases>false</overWriteReleases>
					<overWriteIfNewer>true</overWriteIfNewer>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
						<goal>start</goal></goals>
						<configuration>
							<images>
								<image>library/cassandra:${cassandra-version}</image>
							</images>
						</configuration>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
						<goal>start</goal></goals>
						<configuration>
							<images>
								<image>library/cassandra:${cassandra-version}</image>
							</images>
						</configuration>
					</execution>
					</executions>
				</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.38.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>5.1.2</version>
					<extensions>true</extensions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>apache-jena-libs</artifactId>
				<type>pom</type>
				<version>${jena-version}</version>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.cassandra</groupId>
				<artifactId>cassandra-parent</artifactId>
				<version>${cassandra-version}</version>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<properties>
		<jena-version>4.2.0</jena-version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<java.version>11</java.version>
		<cassandra-version>4.0.1</cassandra-version>
		<datastax-version>3.10.2</datastax-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
</project>
